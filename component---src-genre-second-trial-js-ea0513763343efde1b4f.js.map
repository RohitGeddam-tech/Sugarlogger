{"version":3,"sources":["webpack://gatsby-starter-default/./src/Genre/Genre.js","webpack://gatsby-starter-default/./src/Genre/SecondTrial.js"],"names":["useState","clicked","setClicked","locref","useRef","isInView","current","getBoundingClientRect","leftPos","left","offsetWidth","console","log","inView","setInView","positionHandler","useCallback","useEffect","window","addEventListener","removeEventListener","positionDrop","InView","rect","pageYOffset","View","setView","scrollHandler","dropup","data","useStaticQuery","className","Link","to","activeClassName","allStrapiCategories","edges","slice","map","document","node","id","name","length","ref","onClick","onMouseEnter","onMouseLeave","style","doc","text","remUnderline","e","target","textDecoration","addUnderline","blogs","pageContext","pageData","page","setPage","indexOfLastPost","indexOfFirstPost","placeholder","key","src","image","childImageSharp","fluid","alt","title","description","substring","author","username","published_at","postsPerPage","totalPosts","paginate","pageNumber"],"mappings":"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","file":"component---src-genre-second-trial-js-ea0513763343efde1b4f.js","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\"\nimport { Dropdown } from \"semantic-ui-react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport \"../css/Genres.css\"\n\nconst GenresNav = () => {\n  const [clicked, setClicked] = useState(false)\n\n  const locref = useRef(null)\n\n  const isInView = () => {\n    if (!locref.current) return\n    if (locref.current.getBoundingClientRect() || null) {\n      const rect = locref.current.getBoundingClientRect()\n      const leftPos = rect.left - locref.current.offsetWidth * 0\n      console.log(leftPos)\n      return leftPos\n    } else {\n      return null\n    }\n  }\n\n  const [inView, setInView] = useState(false)\n\n  const positionHandler = useCallback(() => {\n    setInView(isInView())\n  }, [])\n\n  useEffect(() => {\n    setInView(isInView())\n    window.addEventListener(\"resize\", positionHandler)\n    return () => {\n      window.removeEventListener(\"resize\", positionHandler)\n    }\n  }, [positionHandler])\n\n  const positionDrop = inView ? { left: isInView() } : null\n\n  const InView = () => {\n    const rect = window.pageYOffset\n    return rect >= 0 && rect <= 1300\n  }\n\n  const [View, setView] = useState(false)\n\n  const scrollHandler = useCallback(() => {\n    setView(InView())\n  }, [])\n\n  useEffect(() => {\n    setView(InView())\n    window.addEventListener(\"scroll\", scrollHandler)\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler)\n    }\n  }, [scrollHandler])\n\n  const dropdown = clicked ? \"new-drop\" : \"none-drop\"\n\n  const dropRev = clicked ? \"reverse-drop\" : \"none-drop\"\n\n  const dropup = View ? dropdown : dropRev\n\n  const data = useStaticQuery(graphql`\n    query categoryquery {\n      allStrapiCategories {\n        edges {\n          node {\n            id\n            name\n            strapiId\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div className=\"genres-bar\">\n        <nav className=\"genres-nav\">\n          <div className=\"overflow-links\">\n            <ul>\n              <li>\n                <Link\n                  to=\"/\"\n                  activeClassName=\"linkactive\"\n                  className=\"genres-navlinks\"\n                >\n                  Home\n                </Link>\n              </li>\n              {data.allStrapiCategories.edges.slice(0, 6).map(document => (\n                <li>\n                  <Link\n                    to={`/Genre/${document.node.id}`}\n                    activeClassName=\"linkactive\"\n                    className=\"genres-navlinks\"\n                  >\n                    {document.node.name}\n                  </Link>\n                </li>\n              ))}\n              {data.allStrapiCategories.edges.length > 7 ? (\n                <li\n                  className=\"parent\"\n                  ref={locref}\n                  onClick={() => {\n                    setClicked(!clicked)\n                  }}\n                  onMouseEnter={() => {\n                    setClicked(true)\n                  }}\n                  onMouseLeave={() => {\n                    setClicked(false)\n                  }}\n                >\n                  <button>More Categories</button>\n                  <div className={dropup} style={positionDrop}>\n                    <ul>\n                      {data.allStrapiCategories.edges.slice(7, 14).map(doc => (\n                        <li>\n                          <Link to={`/Genres/${doc.node.id}`}>\n                            <Dropdown.Item\n                              className=\"genres-droplink\"\n                              text={doc.node.name}\n                            />\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </li>\n              ) : (\n                <div className=\"nodisplay\"></div>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {/* <SecondPage /> */}\n      {/* <SecondTrial /> */}\n    </>\n  )\n}\n\nexport default GenresNav\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport \"../css/SecondPage.css\"\nimport { Search } from \"semantic-ui-react\"\n// import Cardbox from \"../Utils/CardBox\"\nimport Layout from '../components/layout'\nimport Cardbtn from \"../utils/Cardbtn\"\nimport GenresNav from \"./Genre\"\n\nconst remUnderline = e => {\n  e.target.style.textDecoration = \"none\"\n}\nconst addUnderline = e => {\n  e.target.style.textDecoration = \"underline\"\n}\n\nconst SecondPage = ({pageContext}) => {\n    // console.log(pageContext.pageData)\n  const { blogs } = pageContext.pageData.node\n  \n  const [page, setPage] = useState(1)\n  const perPage = 9\n\n  const indexOfLastPost = page * perPage\n  const indexOfFirstPost = indexOfLastPost - perPage\n  const paginate = pageNumber => setPage(pageNumber)\n\n  return (\n    <Layout>\n    <GenresNav />\n      <div className=\"second-container\">\n        <div className=\"searchbox\">\n          <Search placeholder=\"Search\" />\n        </div>\n        <div className=\"cardBox\">\n          <div className=\"allCards\">\n            {blogs.slice(indexOfFirstPost, indexOfLastPost).map(doc => {\n              return (\n                <div className=\"inherit-boxcard\">\n                  <Link\n                    to={`/article/${doc.id}`}\n                    className=\"boxcard\"\n                    key={doc.id}\n                  >\n                    <div className=\"cardimage\">\n                      <img\n                        src={doc.image.childImageSharp.fluid.src}\n                        alt=\"banner\"\n                      />\n                    </div>\n                    <div className=\"cardinfo\">\n                      <div className=\"card-start\">\n                        {/* <div className=\"card-genre\">\n                          {doc.categories.map(document => (\n                            <button className=\"card-btn\">\n                              {document.name}\n                            </button>\n                          ))}\n                        </div> */}\n                        <div className=\"card-detail\">\n                          <h1>{doc.title}</h1>\n                          <p>{doc.description.substring(0,150)}{doc.description.length > 150 && '...'}</p>\n                        </div>\n                      </div>\n                      <div className=\"card-footer\">\n                        <div className=\"card-left\">\n                          <h1>\n                            By\n                            <h2>\n                              {doc.author.username}\n                            </h2>\n                          </h1>\n                          <p>{doc.published_at.slice(0, 10)}</p>\n                        </div>\n                        <div className=\"card-right\">\n                          <Link to={`/article/${doc.id}`}>\n                            <h1\n                              onMouseEnter={addUnderline}\n                              onMouseLeave={remUnderline}\n                            >\n                              READ MORE\n                            </h1>\n                          </Link>\n                          <Link to={`/article/${doc.id}`}>\n                            <i className=\"large arrow right icon\"></i>\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              )\n            })}\n          </div>\n          <Cardbtn\n            page={page}\n            setPage={setPage}\n            postsPerPage={perPage}\n            totalPosts={blogs.length}\n            paginate={paginate}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SecondPage\n"],"sourceRoot":""}