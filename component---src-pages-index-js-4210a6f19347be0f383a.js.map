{"version":3,"sources":["webpack://gatsby-starter-default/./src/Home/FirstPage.js","webpack://gatsby-starter-default/./src/Home/SecondPage.js","webpack://gatsby-starter-default/./src/Home/GenreNavPage.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["remUnderline","e","target","style","textDecoration","addUnderline","data","useStaticQuery","className","key","strapiBlogs","id","Link","to","strapiId","src","image","childImageSharp","fluid","alt","tag","name","categories","map","doc","title","description","author","username","published_at","slice","onMouseEnter","onMouseLeave","useState","page","setPage","indexOfLastPost","indexOfFirstPost","Search","placeholder","allStrapiBlogs","edges","node","document","substring","length","Cardbtn","postsPerPage","totalPosts","paginate","pageNumber","clicked","setClicked","locref","useRef","isInView","current","getBoundingClientRect","leftPos","left","offsetWidth","console","log","inView","setInView","positionHandler","useCallback","useEffect","window","addEventListener","removeEventListener","positionDrop","InView","rect","pageYOffset","View","setView","scrollHandler","dropup","activeClassName","allStrapiCategories","ref","onClick","Dropdown","text"],"mappings":"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","file":"component---src-pages-index-js-4210a6f19347be0f383a.js","sourcesContent":["import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n// import banner from \"../images/banner.png\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"../css/FirstPage.css\"\n\nconst remUnderline = e => {\n  e.target.style.textDecoration = \"none\"\n}\nconst addUnderline = e => {\n  e.target.style.textDecoration = \"underline\"\n}\n\nconst FirstPage = () => {\n  const data = useStaticQuery(graphql`\n    query newquery {\n      strapiBlogs {\n        id\n        title\n        description\n        tag {\n          name\n        }\n        image {\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n        categories {\n          name\n        }\n        published_at\n        author {\n          username\n        }\n        strapiId\n      }\n    }\n  `)\n  return (\n    <>\n      <div className=\"banner\" key={data.strapiBlogs.id}>\n      <div className=\"home-header\">\n          <div className=\"home-container\">\n            <h1>blogs</h1>\n            <h2>Stay updated with us</h2>\n          </div>\n        </div>\n        <div className=\"banner-container\">\n        <div className=\"banner-aftertitle\">\n            <h1>Featured Post</h1>\n          </div>\n            <div className=\"new-divider\"></div>\n          <Link to={`/article/${data.strapiBlogs.strapiId}`} className=\"bannerbox\">\n            <div className=\"bannerimg\">\n              <img\n                src={data.strapiBlogs.image.childImageSharp.fluid.src}\n                alt=\"banner\"\n              />\n            </div>\n            <div className=\"banner-detail\">\n              <div className=\"banner-top\">\n                <div className=\"banner-title\">\n                  <h1>{data.strapiBlogs.tag.name}</h1>\n                </div>\n                <div className=\"diviiider\"></div>\n                <div className=\"Genres\">\n                  {data.strapiBlogs.categories.map(doc => (\n                    <button className=\"bannerbtn\">{doc.name}</button>\n                  ))}\n                </div>\n                <div className=\"banner-data\">\n                  <h1>{data.strapiBlogs.title}</h1>\n                  <p>{data.strapiBlogs.description}</p>\n                </div>\n              </div>\n              <div className=\"banner-footer\">\n                <div className=\"right\">\n                  <div className=\"colorOrange\">\n                    <h2>By </h2>\n                    <h1>\n                      {data.strapiBlogs.author.username}\n                    </h1>\n                  </div>\n                  <p>{data.strapiBlogs.published_at.slice(0, 10)}</p>\n                </div>\n                <div className=\"left\">\n                  <Link to={`/article/${data.strapiBlogs.strapiId}`}>\n                    <h1 onMouseEnter={addUnderline} onMouseLeave={remUnderline}>\n                      Read More\n                    </h1>\n                  </Link>\n                  <Link to={`/article/${data.strapiBlogs.strapiId}`}>\n                    <i className=\"large arrow right icon\"></i>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default FirstPage","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport \"../css/SecondPage.css\"\nimport { Search } from \"semantic-ui-react\"\n// import Cardbox from \"../Utils/CardBox\"\nimport Cardbtn from \"../utils/Cardbtn\"\n\nconst remUnderline = e => {\n  e.target.style.textDecoration = \"none\"\n}\nconst addUnderline = e => {\n  e.target.style.textDecoration = \"underline\"\n}\n\nconst SecondPage = () => {\n  const [page, setPage] = useState(1)\n  const perPage = 9\n\n  const indexOfLastPost = page * perPage\n  const indexOfFirstPost = indexOfLastPost - perPage\n  const paginate = pageNumber => setPage(pageNumber)\n\n  const data = useStaticQuery(graphql`\n    query Genrescatquery {\n      allStrapiBlogs {\n        edges {\n          node {\n            id\n            title\n            description\n            image {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n            categories {\n              name\n            }\n            author {\n              username\n            }\n            published_at\n            strapiId\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div className=\"second-container\">\n        <div className=\"searchbox\">\n          <Search placeholder=\"Search\" />\n        </div>\n        <div className=\"cardBox\">\n          <div className=\"allCards\">\n            {data.allStrapiBlogs.edges\n              .slice(indexOfFirstPost, indexOfLastPost)\n              .map(doc => {\n                return (\n                  <div className=\"inherit-boxcard\">\n                    <Link\n                      to={`/article/${doc.node.strapiId}`}\n                      className=\"boxcard\"\n                      key={doc.node.id}\n                    >\n                      <div className=\"cardimage\">\n                        <img\n                          src={doc.node.image.childImageSharp.fluid.src}\n                          alt=\"banner\"\n                        />\n                      </div>\n                      <div className=\"cardinfo\">\n                        <div className=\"card-start\">\n                          <div className=\"card-genre\">\n                            {doc.node.categories.map(document => (\n                              <button className=\"card-btn\">\n                                {document.name}\n                              </button>\n                            ))}\n                          </div>\n                          <div className=\"card-detail\">\n                            <h1>{doc.node.title}</h1>\n                            <p>{doc.node.description.substring(0,150)}{doc.node.description.length > 150 && ' ...'}</p>\n                          </div>\n                        </div>\n                        <div className=\"card-footer\">\n                          <div className=\"card-left\">\n                            <h1>\n                              By\n                              <h2>\n                                {doc.node.author.username}\n                              </h2>\n                            </h1>\n                            <p>{doc.node.published_at.slice(0, 10)}</p>\n                          </div>\n                          <div className=\"card-right\">\n                            <Link to={`/article/${doc.node.strapiId}`}>\n                              <h1\n                                onMouseEnter={addUnderline}\n                                onMouseLeave={remUnderline}\n                              >\n                                READ MORE\n                              </h1>\n                            </Link>\n                            <Link to={`/article/${doc.node.strapiId}`}>\n                              <i className=\"large arrow right icon\"></i>\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  </div>\n                )\n              })}\n          </div>\n          <Cardbtn\n            page={page}\n            setPage={setPage}\n            postsPerPage={perPage}\n            totalPosts={data.allStrapiBlogs.edges.length}\n            paginate={paginate}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SecondPage\n","import React, { useState, useRef, useEffect, useCallback } from \"react\"\nimport { Dropdown } from \"semantic-ui-react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport \"../css/Genres.css\"\nimport FirstPage from \"./FirstPage\"\nimport SecondPage from \"./SecondPage\"\n\nconst GenresNav = () => {\n  const [clicked, setClicked] = useState(false)\n\n  const locref = useRef(null)\n\n  const isInView = () => {\n    if (!locref.current) return\n    if (locref.current.getBoundingClientRect() || null) {\n      const rect = locref.current.getBoundingClientRect()\n      const leftPos = rect.left - locref.current.offsetWidth * 0\n      console.log(leftPos)\n      return leftPos\n    } else {\n      return null\n    }\n  }\n\n  const [inView, setInView] = useState(false)\n\n  const positionHandler = useCallback(() => {\n    setInView(isInView())\n  }, [])\n\n  useEffect(() => {\n    setInView(isInView())\n    window.addEventListener(\"resize\", positionHandler)\n    return () => {\n      window.removeEventListener(\"resize\", positionHandler)\n    }\n  }, [positionHandler])\n\n  const positionDrop = inView ? { left: isInView() } : null\n\n  const InView = () => {\n    const rect = window.pageYOffset\n    return rect >= 0 && rect <= 1300\n  }\n\n  const [View, setView] = useState(false)\n\n  const scrollHandler = useCallback(() => {\n    setView(InView())\n  }, [])\n\n  useEffect(() => {\n    setView(InView())\n    window.addEventListener(\"scroll\", scrollHandler)\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler)\n    }\n  }, [scrollHandler])\n\n  const dropdown = clicked ? \"new-drop\" : \"none-drop\"\n\n  const dropRev = clicked ? \"reverse-drop\" : \"none-drop\"\n\n  const dropup = View ? dropdown : dropRev\n\n  const data = useStaticQuery(graphql`\n    query Homecategoryquery {\n      allStrapiCategories {\n        edges {\n          node {\n            id\n            name\n            strapiId\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <FirstPage />\n      <div className=\"genres-bar\">\n        <nav className=\"genres-nav\">\n          <div className=\"overflow-links\">\n            <ul>\n              <li>\n                <Link\n                  to=\"/\"\n                  activeClassName=\"linkactive\"\n                  className=\"genres-navlinks\"\n                >\n                  Home\n                </Link>\n              </li>\n              {data.allStrapiCategories.edges.slice(0, 6).map(document => (\n                <li>\n                  <Link\n                    to={`/Genre/${document.node.id}`}\n                    activeClassName=\"linkactive\"\n                    className=\"genres-navlinks\"\n                  >\n                    {document.node.name}\n                  </Link>\n                </li>\n              ))}\n              {data.allStrapiCategories.edges.length > 7 ? (\n                <li\n                  className=\"parent\"\n                  ref={locref}\n                  onClick={() => {\n                    setClicked(!clicked)\n                  }}\n                  onMouseEnter={() => {\n                    setClicked(true)\n                  }}\n                  onMouseLeave={() => {\n                    setClicked(false)\n                  }}\n                >\n                  <button>More Categories</button>\n                  <div className={dropup} style={positionDrop}>\n                    <ul>\n                      {data.allStrapiCategories.edges.slice(7, 14).map(doc => (\n                        <li>\n                          <Link to={`/Genres/${doc.node.id}`}>\n                            <Dropdown.Item\n                              className=\"genres-droplink\"\n                              text={doc.node.name}\n                            />\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </li>\n              ) : (\n                <div className=\"nodisplay\"></div>\n              )}\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <SecondPage />\n    </>\n  )\n}\n\nexport default GenresNav\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport GenresNav from \"../Home/GenreNavPage\"\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <GenresNav />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}